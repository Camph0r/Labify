{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Go\\\\SAAR-2024\\\\frontend\\\\labifyfrontend\\\\src\\\\components\\\\QuizComponent.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz({\n  type\n}) {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [showResults, setShowResults] = useState(false);\n  const [time, setTime] = useState(180);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(prevTime => prevTime > 0 ? prevTime - 1 : 0);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  if (type === 'instructor') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this);\n  }\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  };\n  const questions = [{\n    \"query\": \"Which of the following teams has not won the ICC Cricket World Cup?\",\n    \"choices\": [\"Australia\", \"India\", \"England\", \"South Africa\"],\n    \"answer\": 3,\n    \"explanation\": \"South Africa has not won the ICC Cricket World Cup. Australia has won it 5 times, India has won it 2 times, and England won it for the first time in 2019.\"\n  }, {\n    \"query\": \"What is the highest individual score by a batsman in Test cricket?\",\n    \"choices\": [\"400\", \"375\", \"365\", \"300\"],\n    \"answer\": 0,\n    \"explanation\": \"The highest individual score by a batsman in Test cricket is 400 runs. This record is held by Brian Lara of the West Indies.\"\n  }, {\n    \"query\": \"Which country has won the most number of ICC Champions Trophies?\",\n    \"choices\": [\"India\", \"Australia\", \"Pakistan\", \"South Africa\"],\n    \"answer\": 1,\n    \"explanation\": \"Australia has won the most number of ICC Champions Trophies. They have won it 3 times, while India and Pakistan have won it 2 times each, and South Africa has never won it.\"\n  }, {\n    \"query\": \"Who has scored the most runs in One Day International (ODI) cricket?\",\n    \"choices\": [\"Sachin Tendulkar\", \"Virat Kohli\", \"Ricky Ponting\", \"Kumar Sangakkara\"],\n    \"answer\": 0,\n    \"explanation\": \"Sachin Tendulkar from India has scored the most runs in One Day International (ODI) cricket. He scored a total of 18,426 runs in his ODI career, which is the highest by any batsman.\"\n  }, {\n    \"query\": \"What is the duration of a T20 International cricket match?\",\n    \"choices\": [\"3 hours\", \"4 hours\", \"5 hours\", \"6 hours\"],\n    \"answer\": 0,\n    \"explanation\": \"The duration of a T20 International cricket match is approximately 3 hours. Each team gets to play 20 overs, and the match is usually completed within this time frame.\"\n  }];\n  const calculateTotalMarks = () => {\n    let totalMarks = 0;\n    questions.forEach((question, index) => {\n      if (question.answer === userAnswers[index]) {\n        totalMarks += 1;\n      }\n    });\n    return totalMarks;\n  };\n  const handleAnswerSelect = selectedAnswerIndex => {\n    setUserAnswers([...userAnswers, selectedAnswerIndex]);\n    if (currentQuestionIndex + 1 < questions.length) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowResults(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Quiz Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Total Marks: \", calculateTotalMarks(), \" out of \", questions.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), calculateTotalMarks() > 3 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"You have earned eligibility for today's lab.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 5\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: \"You did not meet the minimum criteria for today's lab. Better luck next time!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Explanation for Question \", index + 1, \": \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 49\n        }, this), \" \", question.explanation]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        marginLeft: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time Remaining: \", formatTime(time)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question \", currentQuestionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: '20px'\n        },\n        children: questions[currentQuestionIndex].query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '10px',\n          margin: '10px 15px'\n        },\n        children: questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: '1px solid #ddd',\n            padding: '8px',\n            margin: '5px 0',\n            cursor: 'pointer'\n          },\n          onClick: () => handleAnswerSelect(index),\n          children: choice\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"7nqJ+Igb3ZLkRPAQSwdDttx42ME=\");\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["useState","useEffect","Navigate","jsxDEV","_jsxDEV","Quiz","type","_s","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","showResults","setShowResults","time","setTime","interval","setInterval","prevTime","clearInterval","to","fileName","_jsxFileName","lineNumber","columnNumber","formatTime","seconds","minutes","Math","floor","remainingSeconds","questions","calculateTotalMarks","totalMarks","forEach","question","index","answer","handleAnswerSelect","selectedAnswerIndex","length","children","style","marginLeft","color","map","explanation","padding","query","border","margin","choices","choice","cursor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Go/SAAR-2024/frontend/labifyfrontend/src/components/QuizComponent.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nexport default function Quiz({type}) {\r\n\r\n\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [time, setTime] = useState(180); \r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTime((prevTime) => (prevTime > 0 ? prevTime - 1 : 0));\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  if ( type==='instructor') {\r\n    return(\r\n        <Navigate to =\"/\"/>\r\n    )\r\n    \r\n}\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\r\n  };\r\n  const questions = [\r\n  \r\n        {\r\n          \"query\": \"Which of the following teams has not won the ICC Cricket World Cup?\",\r\n          \"choices\": [\"Australia\", \"India\", \"England\", \"South Africa\"],\r\n          \"answer\": 3,\r\n          \"explanation\": \"South Africa has not won the ICC Cricket World Cup. Australia has won it 5 times, India has won it 2 times, and England won it for the first time in 2019.\"\r\n        },\r\n        {\r\n          \"query\": \"What is the highest individual score by a batsman in Test cricket?\",\r\n          \"choices\": [\"400\", \"375\", \"365\", \"300\"],\r\n          \"answer\": 0,\r\n          \"explanation\": \"The highest individual score by a batsman in Test cricket is 400 runs. This record is held by Brian Lara of the West Indies.\"\r\n        },\r\n        {\r\n          \"query\": \"Which country has won the most number of ICC Champions Trophies?\",\r\n          \"choices\": [\"India\", \"Australia\", \"Pakistan\", \"South Africa\"],\r\n          \"answer\": 1,\r\n          \"explanation\": \"Australia has won the most number of ICC Champions Trophies. They have won it 3 times, while India and Pakistan have won it 2 times each, and South Africa has never won it.\"\r\n        },\r\n        {\r\n          \"query\": \"Who has scored the most runs in One Day International (ODI) cricket?\",\r\n          \"choices\": [\"Sachin Tendulkar\", \"Virat Kohli\", \"Ricky Ponting\", \"Kumar Sangakkara\"],\r\n          \"answer\": 0,\r\n          \"explanation\": \"Sachin Tendulkar from India has scored the most runs in One Day International (ODI) cricket. He scored a total of 18,426 runs in his ODI career, which is the highest by any batsman.\"\r\n        },\r\n        {\r\n          \"query\": \"What is the duration of a T20 International cricket match?\",\r\n          \"choices\": [\"3 hours\", \"4 hours\", \"5 hours\", \"6 hours\"],\r\n          \"answer\": 0,\r\n          \"explanation\": \"The duration of a T20 International cricket match is approximately 3 hours. Each team gets to play 20 overs, and the match is usually completed within this time frame.\"\r\n        }\r\n   \r\n  ];\r\n\r\n  const calculateTotalMarks = () => {\r\n    let totalMarks = 0;\r\n    questions.forEach((question, index) => {\r\n      if (question.answer === userAnswers[index]) {\r\n        totalMarks += 1;\r\n      }\r\n    });\r\n    return totalMarks;\r\n  };\r\n\r\n  const handleAnswerSelect = (selectedAnswerIndex) => {\r\n    setUserAnswers([...userAnswers, selectedAnswerIndex]);\r\n    if (currentQuestionIndex + 1 < questions.length) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      setShowResults(true);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      {showResults ? (\r\n        <div style={{marginLeft:'15px'}}>\r\n          <h4>Quiz Results</h4>\r\n          <h6>\r\n            Total Marks: {calculateTotalMarks()} out of {questions.length}\r\n         \r\n          <br/>\r\n            {calculateTotalMarks() > 3\r\n  ? <span style={{color:'green'}}>You have earned eligibility for today's lab.</span>\r\n  : <span style={{color:'red'}}>You did not meet the minimum criteria for today's lab. Better luck next time!</span>}\r\n\r\n       </h6>\r\n          {questions.map((question, index) => (\r\n        <p key={index}>\r\n          Explanation for Question {index + 1}: <br /> {question.explanation}\r\n        </p>\r\n      ))}\r\n\r\n     \r\n        </div>\r\n      ) : (\r\n        <div style={{padding:'20px', marginLeft:'10px'}}>\r\n           <p>Time Remaining: {formatTime(time)}</p>\r\n          <h2 >Question {currentQuestionIndex + 1}</h2>\r\n          <p style={{marginLeft:'20px'}}>{questions[currentQuestionIndex].query}</p>\r\n          <div style={{ border: '1px solid #ccc', padding: '10px', margin: '10px 15px' }}>\r\n            {questions[currentQuestionIndex].choices.map((choice, index) => (\r\n              <div\r\n                key={index}\r\n                style={{\r\n                  border: '1px solid #ddd',\r\n                  padding: '8px',\r\n                  margin: '5px 0',\r\n                  cursor: 'pointer',\r\n                }}\r\n                onClick={() => handleAnswerSelect(index)}\r\n              >\r\n                {choice}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,eAAe,SAASC,IAAIA,CAAC;EAACC;AAAI,CAAC,EAAE;EAAAC,EAAA;EAGnC,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,GAAG,CAAC;EAIrCC,SAAS,CAAC,MAAM;IACd,MAAMe,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,OAAO,CAAEG,QAAQ,IAAMA,QAAQ,GAAG,CAAC,GAAGA,QAAQ,GAAG,CAAC,GAAG,CAAE,CAAC;IAC1D,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAKV,IAAI,KAAG,YAAY,EAAE;IACxB,oBACIF,OAAA,CAACF,QAAQ;MAACkB,EAAE,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAG3B;EACE,MAAMC,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMI,gBAAgB,GAAGJ,OAAO,GAAG,EAAE;IACrC,OAAQ,GAAEC,OAAQ,IAAGG,gBAAgB,GAAG,EAAE,GAAG,GAAG,GAAG,EAAG,GAAEA,gBAAiB,EAAC;EAC5E,CAAC;EACD,MAAMC,SAAS,GAAG,CAEZ;IACE,OAAO,EAAE,qEAAqE;IAC9E,SAAS,EAAE,CAAC,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,cAAc,CAAC;IAC5D,QAAQ,EAAE,CAAC;IACX,aAAa,EAAE;EACjB,CAAC,EACD;IACE,OAAO,EAAE,oEAAoE;IAC7E,SAAS,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvC,QAAQ,EAAE,CAAC;IACX,aAAa,EAAE;EACjB,CAAC,EACD;IACE,OAAO,EAAE,kEAAkE;IAC3E,SAAS,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,cAAc,CAAC;IAC7D,QAAQ,EAAE,CAAC;IACX,aAAa,EAAE;EACjB,CAAC,EACD;IACE,OAAO,EAAE,sEAAsE;IAC/E,SAAS,EAAE,CAAC,kBAAkB,EAAE,aAAa,EAAE,eAAe,EAAE,kBAAkB,CAAC;IACnF,QAAQ,EAAE,CAAC;IACX,aAAa,EAAE;EACjB,CAAC,EACD;IACE,OAAO,EAAE,4DAA4D;IACrE,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACvD,QAAQ,EAAE,CAAC;IACX,aAAa,EAAE;EACjB,CAAC,CAEN;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIC,UAAU,GAAG,CAAC;IAClBF,SAAS,CAACG,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;MACrC,IAAID,QAAQ,CAACE,MAAM,KAAK3B,WAAW,CAAC0B,KAAK,CAAC,EAAE;QAC1CH,UAAU,IAAI,CAAC;MACjB;IACF,CAAC,CAAC;IACF,OAAOA,UAAU;EACnB,CAAC;EAED,MAAMK,kBAAkB,GAAIC,mBAAmB,IAAK;IAClD5B,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE6B,mBAAmB,CAAC,CAAC;IACrD,IAAI/B,oBAAoB,GAAG,CAAC,GAAGuB,SAAS,CAACS,MAAM,EAAE;MAC/C/B,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;IACnD,CAAC,MAAM;MACLK,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAGD,oBACET,OAAA;IAAAqC,QAAA,EACG7B,WAAW,gBACVR,OAAA;MAAKsC,KAAK,EAAE;QAACC,UAAU,EAAC;MAAM,CAAE;MAAAF,QAAA,gBAC9BrC,OAAA;QAAAqC,QAAA,EAAI;MAAY;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBpB,OAAA;QAAAqC,QAAA,GAAI,eACW,EAACT,mBAAmB,CAAC,CAAC,EAAC,UAAQ,EAACD,SAAS,CAACS,MAAM,eAE/DpC,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACFQ,mBAAmB,CAAC,CAAC,GAAG,CAAC,gBAClC5B,OAAA;UAAMsC,KAAK,EAAE;YAACE,KAAK,EAAC;UAAO,CAAE;UAAAH,QAAA,EAAC;QAA4C;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gBACjFpB,OAAA;UAAMsC,KAAK,EAAE;YAACE,KAAK,EAAC;UAAK,CAAE;UAAAH,QAAA,EAAC;QAA6E;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEzG,CAAC,EACDO,SAAS,CAACc,GAAG,CAAC,CAACV,QAAQ,EAAEC,KAAK,kBACjChC,OAAA;QAAAqC,QAAA,GAAe,2BACY,EAACL,KAAK,GAAG,CAAC,EAAC,IAAE,eAAAhC,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,KAAC,EAACW,QAAQ,CAACW,WAAW;MAAA,GAD5DV,KAAK;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGK,CAAC,gBAENpB,OAAA;MAAKsC,KAAK,EAAE;QAACK,OAAO,EAAC,MAAM;QAAEJ,UAAU,EAAC;MAAM,CAAE;MAAAF,QAAA,gBAC7CrC,OAAA;QAAAqC,QAAA,GAAG,kBAAgB,EAAChB,UAAU,CAACX,IAAI,CAAC;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1CpB,OAAA;QAAAqC,QAAA,GAAK,WAAS,EAACjC,oBAAoB,GAAG,CAAC;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7CpB,OAAA;QAAGsC,KAAK,EAAE;UAACC,UAAU,EAAC;QAAM,CAAE;QAAAF,QAAA,EAAEV,SAAS,CAACvB,oBAAoB,CAAC,CAACwC;MAAK;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1EpB,OAAA;QAAKsC,KAAK,EAAE;UAAEO,MAAM,EAAE,gBAAgB;UAAEF,OAAO,EAAE,MAAM;UAAEG,MAAM,EAAE;QAAY,CAAE;QAAAT,QAAA,EAC5EV,SAAS,CAACvB,oBAAoB,CAAC,CAAC2C,OAAO,CAACN,GAAG,CAAC,CAACO,MAAM,EAAEhB,KAAK,kBACzDhC,OAAA;UAEEsC,KAAK,EAAE;YACLO,MAAM,EAAE,gBAAgB;YACxBF,OAAO,EAAE,KAAK;YACdG,MAAM,EAAE,OAAO;YACfG,MAAM,EAAE;UACV,CAAE;UACFC,OAAO,EAAEA,CAAA,KAAMhB,kBAAkB,CAACF,KAAK,CAAE;UAAAK,QAAA,EAExCW;QAAM,GATFhB,KAAK;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjB,EAAA,CAnIuBF,IAAI;AAAAkD,EAAA,GAAJlD,IAAI;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}